{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/GitHub/2024DBFP/ui/src/datagrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport MapWithMarkerCluster from './map';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_ADDRESS = \"http://172.20.10.4:3001\";\nconst Datagrid = ({\n  selectedLocation\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [rows, setRows] = useState([]);\n  const [filteredRows, setFilteredRows] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const columns = [{\n    field: '醫院名稱',\n    headerName: '醫院名稱',\n    width: 200\n  }, {\n    field: '醫院電話',\n    headerName: '醫院電話',\n    width: 200\n  }, {\n    field: '醫事機構代碼',\n    headerName: '醫事機構代碼',\n    width: 200\n  }, {\n    field: '醫院地址',\n    headerName: '醫院地址',\n    width: 400\n  }, {\n    field: '藥品名稱',\n    headerName: '藥品名稱',\n    width: 200\n  }];\n  useEffect(() => {\n    const getHospitals = async () => {\n      try {\n        const response = await Axios.get(`${SERVER_ADDRESS}/hospital`);\n        const formattedData = response.data.map((hospital, index) => ({\n          id: index,\n          醫院名稱: hospital['醫院名稱'],\n          醫院電話: hospital['醫院電話'],\n          醫事機構代碼: hospital['醫事機構代碼'],\n          醫院地址: hospital['醫院地址'],\n          藥品名稱: hospital['藥品名稱'],\n          road: hospital['road'],\n          // 新增 road\n          site: hospital['site'],\n          // 新增 site\n          city: hospital['city'] // 新增 city\n        }));\n        setRows(formattedData);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching hospital data:\", error);\n        setLoading(false);\n      }\n    };\n    getHospitals();\n  }, []);\n  useEffect(() => {\n    const applyFilters = () => {\n      const {\n        city,\n        district,\n        road,\n        serum\n      } = selectedLocation;\n      const filteredData = rows.filter(row => {\n        const hasSerum = !serum || row['藥品名稱'] === serum;\n        return (!city || row.city === city) && (!district || row.site === district) && (!road || row.road === road) && hasSerum;\n      });\n      setFilteredRows(filteredData);\n    };\n    if (rows.length > 0) {\n      applyFilters();\n    }\n  }, [selectedLocation, rows]);\n  useEffect(() => {\n    setSelectedRows([]);\n  }, [filteredRows]);\n  const handleSelectionChange = newSelection => {\n    const selectedIDs = new Set(newSelection);\n    const selectedData = filteredRows.filter(row => selectedIDs.has(row.id));\n    setSelectedRows(selectedData);\n    console.log(\"Selected Hospitals:\", selectedData);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u9644\\u8FD1\\u7684\\u91AB\\u9662\\u6216\\u885B\\u751F\\u6240\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '80%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: filteredRows,\n        columns: columns,\n        pageSize: 5,\n        checkboxSelection: true,\n        onSelectionModelChange: newSelection => handleSelectionChange(newSelection)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        marginTop: 50\n      },\n      children: /*#__PURE__*/_jsxDEV(MapWithMarkerCluster, {\n        selectedRows: selectedRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Datagrid, \"Zul5obrOu23NOjrVUigrq59Wnto=\");\n_c = Datagrid;\nexport default Datagrid;\nvar _c;\n$RefreshReg$(_c, \"Datagrid\");","map":{"version":3,"names":["React","useState","useEffect","DataGrid","MapWithMarkerCluster","Axios","jsxDEV","_jsxDEV","SERVER_ADDRESS","Datagrid","selectedLocation","_s","loading","setLoading","rows","setRows","filteredRows","setFilteredRows","selectedRows","setSelectedRows","columns","field","headerName","width","getHospitals","response","get","formattedData","data","map","hospital","index","id","醫院名稱","醫院電話","醫事機構代碼","醫院地址","藥品名稱","road","site","city","error","console","applyFilters","district","serum","filteredData","filter","row","hasSerum","length","handleSelectionChange","newSelection","selectedIDs","Set","selectedData","has","log","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","alignItems","textAlign","height","pageSize","checkboxSelection","onSelectionModelChange","marginTop","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Documents/GitHub/2024DBFP/ui/src/datagrid.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport MapWithMarkerCluster from './map';\nimport Axios from 'axios';\n\nconst SERVER_ADDRESS = \"http://172.20.10.4:3001\";\n\nconst Datagrid = ({ selectedLocation }) => {\n  const [loading, setLoading] = useState(true);\n  const [rows, setRows] = useState([]);\n  const [filteredRows, setFilteredRows] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n\n  const columns = [\n    { field: '醫院名稱', headerName: '醫院名稱', width: 200 },\n    { field: '醫院電話', headerName: '醫院電話', width: 200 },\n    { field: '醫事機構代碼', headerName: '醫事機構代碼', width: 200 },\n    { field: '醫院地址', headerName: '醫院地址', width: 400 },\n    { field: '藥品名稱', headerName: '藥品名稱', width: 200 },\n  ];\n\n  useEffect(() => {\n    const getHospitals = async () => {\n      try {\n        const response = await Axios.get(`${SERVER_ADDRESS}/hospital`);\n        const formattedData = response.data.map((hospital, index) => ({\n          id: index,\n          醫院名稱: hospital['醫院名稱'],\n          醫院電話: hospital['醫院電話'],\n          醫事機構代碼: hospital['醫事機構代碼'],\n          醫院地址: hospital['醫院地址'],\n          藥品名稱: hospital['藥品名稱'],\n          road: hospital['road'], // 新增 road\n          site: hospital['site'], // 新增 site\n          city: hospital['city'] // 新增 city\n        }));\n        setRows(formattedData);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching hospital data:\", error);\n        setLoading(false);\n      }\n    };\n    getHospitals();\n  }, []);\n\n  useEffect(() => {\n    const applyFilters = () => {\n      const { city, district, road, serum } = selectedLocation;\n      const filteredData = rows.filter(row => {\n        const hasSerum = !serum || row['藥品名稱'] === serum;\n        return (\n          (!city || row.city === city) &&\n          (!district || row.site === district) &&\n          (!road || row.road === road) &&\n          hasSerum\n        );\n      });\n      setFilteredRows(filteredData);\n    };\n\n    if (rows.length > 0) {\n      applyFilters();\n    }\n  }, [selectedLocation, rows]);\n\n  useEffect(() => {\n    setSelectedRows([]);\n  }, [filteredRows]);\n\n  const handleSelectionChange = (newSelection) => {\n    const selectedIDs = new Set(newSelection);\n    const selectedData = filteredRows.filter(row => selectedIDs.has(row.id));\n    setSelectedRows(selectedData);\n    console.log(\"Selected Hospitals:\", selectedData);\n  };\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <div style={{ textAlign: 'center' }}>\n        <h1>附近的醫院或衛生所</h1>\n      </div>\n      <div style={{ height: 400, width: '80%' }}>\n        <DataGrid\n          rows={filteredRows}\n          columns={columns}\n          pageSize={5}\n          checkboxSelection\n          onSelectionModelChange={(newSelection) => handleSelectionChange(newSelection)}\n        />\n      </div>\n      <div style={{ width: '80%', marginTop: 50 }}>\n        <MapWithMarkerCluster selectedRows={selectedRows} />\n      </div>\n    </div>\n  );\n};\n\nexport default Datagrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}